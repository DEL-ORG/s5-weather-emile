
pipeline {
    agent {
        label ("aws-deploy")
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
        disableConcurrentBuilds()
        timeout (time: 60, unit: 'MINUTES')
        timestamps()
    }
  
  // environment {
    //     DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    // }
    stages {
            stage('Hello') {
                steps {
                    sh '''
                    ls 
                    pwd
                    '''
                }
            }
    //     stage('Test-Auth-Binaries') {
    //      agent {
    //         docker {
    //           image 'golang:alpine'
    //           args '-u root:root'
    //         }
    //         }
    //         steps {
    //             sh '''
    //             cd weatherapp/auth/src/main
    //             go build
    //             go tess
    //             ls -latr
    //             cd -
    //             '''
    //         }
    //     }

    //    stage('Test-UI-Binaries') {
    //      agent {
    //         docker {
    //           image 'node:17'
    //           args '-u root:root'
    //         }
    //         }
    //         steps {
    //             sh '''
    //             cd weatherapp/UI
    //             npm run
    //             ls -latr
    //             cd -
    //             '''
    //         }
    //     }

    //   stage('Test-Weather-Binaries') {
    //      agent {
    //         docker {
    //           image 'python:3.8-slim-buster'
    //           args '-u root:root'
    //         }
    //         }
    //         steps {
    //             sh '''
    //             cd weatherapp/weather
    //             pip3 install -r requirements.txt
    //             ls -latr
    //             cd -
    //             '''
    //         }
    //     }

// stage('SonarQube analysis') {
//             agent {
//                 docker {
//                   image 'sonarsource/sonar-scanner-cli:4.7.0'
//                 }
//                }
//                environment {
//         CI = 'true'
//         //  scannerHome = tool 'Sonar'
//         scannerHome='/opt/sonar-scanner'
//     }
//             steps{
//                 withSonarQubeEnv('Sonar') {
//                     sh "${scannerHome}/bin/sonar-scanner"
//                 }
//             }
//         }
    // stage("Quality gate") {
    //             steps {
    //                 timeout(time: 1, unit: 'HOURS') {
    //                 waitForQualityGate abortPipeline: true }
    //             }
    //         }

      stage('Built-Auth-Image') {
        
            steps {
                sh '''
                cd $WORKSPACE/WEATHERAPP/auth
                docker buid -t devopseasylearning/s5-emile-weatherapp-auth:${BUILD_NUMBER} .
                '''
            }
        }

        stage('Built-UI-Image') {
                
                    steps {
                        sh '''
                        cd $WORKSPACE/WEATHERAPP/UI
                        docker buid -t devopseasylearning/s5-emile-weatherapp-UI:${BUILD_NUMBER} .
                        '''
                    }
                }

                  stage('Built-Weather-Image') {
        
            steps {
                sh '''
                cd $WORKSPACE/WEATHERAPP/weather
                docker buid -t devopseasylearning/s5-emile-weather-weatherapp:${BUILD_NUMBER} .
                '''
            }
        }

          stage('Built-db-Image') {
        
            steps {
                sh '''
                cd $WORKSPACE/WEATHERAPP/db
                docker buid -t devopseasylearning/s5-emile-weatherapp-db:${BUILD_NUMBER} .
                '''
            }
        }

          stage('Built-redis-Image') {
        
            steps {
                sh '''
                cd $WORKSPACE/WEATHERAPP/redis
                docker buid -t devopseasylearning/s5-emile-weatherapp-redis:${BUILD_NUMBER} .
                '''
            }
        }

    }
}


             

